@using Norexia.Core.Facade.Client.Sdk;
@using NorexiaGestionCommercialeWebUI.Models
@using NorexiaGestionCommercialeWebUI.Models.Delivery;
@using NorexiaGestionCommercialeWebUI.Models.StockEntry;
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups
<div class="row">
    <div class="col-6 mt-1 pt-1 d-flex align-items-center">
        <div class="flex-grow-1 px-1">
            <SfTextBox CssClass="flex-grow-1" @bind-Value=productSearchTerm Placeholder='Référence produit' FloatLabelType="FloatLabelType.Auto"></SfTextBox>
        </div>
        <div class="px-1">
            <SfTooltip Target="#btn-search-product" Content="Rechercher produit">
                <SfButton id="btn-search-product" IconCss="e-icons e-search" OnClick="SearchProduct" type="button"></SfButton>
            </SfTooltip>
        </div>
    </div>


    <div class="col-6 mt-1 pt-1 d-flex align-items-center justify-content-end">
        <div class="p-2 text-center bg-value-card">
            <div class="m-2 fw-bold total">
                <span>Net à payer : <span>@netPrice.ToString("N2")</span></span>
            </div>
        </div>
    </div>

    <div class="col-12 mt-1 pt-1">
        <h2 class="section-header">Lignes bon de livraison</h2>
        <SfGrid @ref=DeliveryLinesGrid AllowResizing=true DataSource="@DeliveryCommand!.DeliveryLines" Toolbar="@(new List<string>() { "Edit","Delete","Update","Cancel"})">
            <GridEvents OnActionComplete="OnActionComplete" TValue="DeliveryLineDto"></GridEvents>
            <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true">
                <Validator>
                    <FluentValidator TValidator="DeliveryLineDtoValidator"></FluentValidator>
                </Validator>
            </GridEditSettings>
            <GridColumns>
                <GridColumn Field=@nameof(DeliveryLineDto.Id) IsPrimaryKey="true" Visible=false></GridColumn>
                <GridColumn Field=@nameof(DeliveryLineDto.Reference) HeaderText="Référence" MinWidth="120px" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(DeliveryLineDto.ShortDesignation) HeaderText="Désignation" MinWidth="120px" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(DeliveryLineDto.SellingPriceId) HeaderText="Groupe de prix" Format="N2" MinWidth="120">
                    <EditTemplate>
                        @{
                            <SfDropDownList TValue="Guid?" TItem=PriceGroupDto Placeholder="Groupe de prix" DataSource="GetLinePriceGroups(context)">
                                <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                <DropDownListEvents ValueChange="(args) => LineSellingPriceChanged(args, context)" TValue="Guid?" TItem="PriceGroupDto"></DropDownListEvents>
                            </SfDropDownList>
                            <ValidationMessage For="@(() => (context as DeliveryLineDto)!.SellingPriceId)"></ValidationMessage>
                        }

                    </EditTemplate>
                    <Template>
                        @{
                            var line = (context as DeliveryLineDto);
                            var linePriceGroupId = line!.SellingPrices.Single(p => p.Id == line.SellingPriceId).PriceGroupId;
                            @if (line!.SellingPrices.Single(p => p.PriceGroupId == DefaultPriceGroupId).Id == line.SellingPriceId)
                            {
                                <div>Par défaut</div>
                            }
                            else
                            {
                                <div>@PriceGroups!.Single(g => g.Id == linePriceGroupId).Name</div>
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(DeliveryLineDto.ExpectedQty) HeaderText="Quantité commandée" MinWidth="120px" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(DeliveryLineDto.Qty) HeaderText="Quantité livrée" MinWidth="120px">
                    <EditTemplate>
                        @{
                            var line = (context as DeliveryLineDto);
                            <SfNumericTextBox @bind-Value=line!.Qty Placeholder='Quantité' Min="0">
                                <NumericTextBoxEvents ValueChange="(args) => LineQuantityChanged(args ,context)" TValue="int?"></NumericTextBoxEvents>
                            </SfNumericTextBox>
                            <ValidationMessage For="@(() => line.Qty)"></ValidationMessage>
                        }
                    </EditTemplate>
                </GridColumn>

                <GridColumn Field=@nameof(DeliveryLineDto.UnitPrice) HeaderText="Prix unitaire HT" Format="N2" MinWidth="120" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(DeliveryLineDto.TotalPriceExcludingTax) HeaderText="Total HT" Format="N2" MinWidth="120" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(DeliveryLineDto.TotalPriceIncludingTax) HeaderText="Total TTC" Format="N2" MinWidth="120" AllowEditing=false></GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
</div>

<SfDialog Width="250px" ShowCloseIcon="true" IsModal="true" @bind-Visible="@IsDialogVisible">
    <DialogTemplates>
        <Header> Info </Header>
        <Content>
            @DialogMessage
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="OK" IsPrimary="true" OnClick="@DialogOkClick" />
    </DialogButtons>
</SfDialog>
