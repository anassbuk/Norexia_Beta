@using Norexia.Core.Facade.Client.Sdk;
@using NorexiaGestionCommercialeWebUI.Models
@using NorexiaGestionCommercialeWebUI.Models.Sale;
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups

<div class="row">
    <div class="col-auto mt-1 pt-1">
        <div class="d-flex align-items-center mb-2">
            <div class="flex-grow-1 px-1">
                <SfNumericTextBox @bind-Value=discount TValue="double?" Min=0 Max=1 Step=0.01 Format="p2" Placeholder='Remise' FloatLabelType="FloatLabelType.Auto">
                    <NumericTextBoxEvents TValue="double?" ValueChange="@DiscountValueChangeHandler"></NumericTextBoxEvents>
                </SfNumericTextBox>
                <ValidationMessage For="@(() => SaleCommand!.Discount)"></ValidationMessage>
            </div>
        </div>
    </div>

    <div class="col mt-1 pt-1 d-flex align-items-center justify-content-end">
        <div class="p-2 text-center bg-value-card">
            <div class="m-2 fw-bold total">
                <span>Net à payer : <span>@netPrice.ToString("N2")</span></span>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-6 mt-1 pt-1 d-flex align-items-center">
        <div class="flex-grow-1 px-1">
            <SfTextBox CssClass="flex-grow-1" @bind-Value=productSearchTerm Placeholder='Référence | Code à barre' FloatLabelType="FloatLabelType.Auto"></SfTextBox>
        </div>
        <div class="px-1">
            <SfTooltip Target="#btn-search-product" Content="Rechercher produit">
                <SfButton id="btn-search-product" IconCss="e-icons e-search" OnClick="SearchProduct" type="button"></SfButton>
            </SfTooltip>
        </div>
    </div>
    <div class="col-6 mt-1 pt-1 d-flex align-items-end justify-content-end">
        <div class="total">
            <span class="bg-value-card px-1">Nombre de produits : <span>@nbrProduct</span></span>
            <span class="bg-value-card px-1">Nombre de pièces : <span>@nbrPieces</span></span>
        </div>
    </div>
    <div class="col-12 mt-1 pt-1">
        <h2 class="section-header">Lignes ventes</h2>
        <SfGrid @ref=SaleLinesGrid DataSource="@SaleCommand!.SaleOrderLines" Toolbar="@(new List<string>() { "Edit", "Delete","Update","Cancel"})">
            <GridEvents OnActionComplete="OnActionComplete" TValue="SaleOrderLineDto"></GridEvents>
            <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal">
                <Validator>
                    <FluentValidator TValidator="SaleOrderLineDtoValidator"></FluentValidator>
                </Validator>
            </GridEditSettings>
            <GridColumns>
                <GridColumn Field=@nameof(SaleOrderLineDto.Id) IsPrimaryKey="true" Visible=false AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.Reference) HeaderText="Référence" MinWidth="120" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.ShortDesignation) HeaderText="Designation" MinWidth="120" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.SellingPriceId) HeaderText="Groupe de prix" Format="N2" MinWidth="120">
                    <EditTemplate>
                        @{
                            <SfDropDownList TValue="Guid?" TItem=PriceGroupDto Placeholder="Groupe de prix" DataSource="GetLinePriceGroups(context)">
                                <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                <DropDownListEvents ValueChange="(args) => LineSellingPriceChanged(args, context)" TValue="Guid?" TItem="PriceGroupDto"></DropDownListEvents>
                            </SfDropDownList>
                            <ValidationMessage For="@(() => (context as SaleOrderLineDto)!.SellingPriceId)"></ValidationMessage>
                        }

                    </EditTemplate>
                    <Template>
                        @{
                            var line = (context as SaleOrderLineDto);
                            var linePriceGroupId = line!.SellingPrices.Single(p => p.Id == line.SellingPriceId).PriceGroupId;
                            @if (line!.SellingPrices.Single(p => p.PriceGroupId == DefaultPriceGroupId).Id == line.SellingPriceId)
                            {
                                <div>Par défaut</div>
                            }
                            else
                            {
                                <div>@PriceGroups!.Single(g => g.Id == linePriceGroupId).Name</div>
                            }
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.Price) HeaderText="Prix" MinWidth="120" Format="N2" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.Qty) HeaderText="Qté" MinWidth="120">
                    <EditTemplate>
                        @{
                            var line = (context as SaleOrderLineDto);
                            <SfNumericTextBox @bind-Value=line!.Qty Placeholder='Qte' Min="0">
                                <NumericTextBoxEvents ValueChange="(args) => LineQuantityChanged(args ,context)" TValue="int?"></NumericTextBoxEvents>
                            </SfNumericTextBox>

                            <ValidationMessage For="@(() => line.Qty)"></ValidationMessage>
                        }
                    </EditTemplate>
                </GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.Vat) HeaderText="TVA (%)" MinWidth="120" AllowEditing=false>
                    <Template>
                        @{
                            var val = (((double?)(context as SaleOrderLineDto)!.Vat ?? 0) / 100);
                            <div>@val.ToString("P2")</div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.Discount) HeaderText="Remise (%)" MinWidth="120" AllowEditing=false>
                    <Template>
                        @{
                            var val = (((double?)(context as SaleOrderLineDto)!.Discount ?? 0) / 100);
                            <div>@val.ToString("P2")</div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.TotalPriceExcludingTax) HeaderText="Montant HT" Format="N2" MinWidth="120" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.TotalVATPrice) HeaderText="Montant TVA" MinWidth="120" Format="N2" AllowEditing=false></GridColumn>
                <GridColumn Field=@nameof(SaleOrderLineDto.TotalPriceIncludingTax) HeaderText="Montant TTC" Format="N2" MinWidth="120" AllowEditing=false></GridColumn>
            </GridColumns>
        </SfGrid>
    </div>

    <div class="col-12 mt-1 pt-1 d-flex align-items-end justify-content-end">
        <div class="total m-2">
            <span class="bg-value-card p-1 m-1">Total HT : <span>@priceExcludingTax.ToString("N2")</span></span>
            <span class="bg-value-card p-1 m-1">Total TVA : <span>@taxPrice.ToString("N2")</span></span>
            <span class="bg-value-card p-1 m-1">Total TTC : <span>@priceIncludingTax.ToString("N2")</span></span>
        </div>
    </div>
</div>

<SfDialog Width="250px" ShowCloseIcon="true" IsModal="true" @bind-Visible="@IsDialogVisible">
    <DialogTemplates>
        <Header> Info </Header>
        <Content>
            @DialogMessage
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="OK" IsPrimary="true" OnClick="@DialogOkClick" />
    </DialogButtons>
</SfDialog>
