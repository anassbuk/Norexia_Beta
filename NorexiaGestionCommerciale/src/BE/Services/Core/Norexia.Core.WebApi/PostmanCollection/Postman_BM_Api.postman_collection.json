{
	"info": {
		"_postman_id": "8386dcab-33d7-4553-9c51-877134cc5396",
		"name": "Postman_BM_Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25947875",
		"_collection_link": "https://interstellar-capsule-644717.postman.co/workspace/Norexia-BM~ead997ae-7efa-43fc-94f2-eb0a4a0b4d9d/collection/25947875-8386dcab-33d7-4553-9c51-877134cc5396?action=share&creator=25947875&source=collection_link"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "PriceGroup",
					"item": [
						{
							"name": "Price Group Create Price Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.set(\"__PriceGroupId\", pm.response.json());\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Car group\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/PriceGroup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PriceGroup"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"sed_e96\": {\n    \"nullable\": true\n  },\n  \"aute_50_\": {\n    \"nullable\": true\n  },\n  \"enim2\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"sed_e96\": {\n    \"nullable\": true\n  },\n  \"aute_50_\": {\n    \"nullable\": true\n  },\n  \"enim2\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Price Group Update Price Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__PriceGroupId\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{id}}\",\n  \"name\": \"First group\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/PriceGroup/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PriceGroup",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"sed_e96\": {\n    \"nullable\": true\n  },\n  \"aute_50_\": {\n    \"nullable\": true\n  },\n  \"enim2\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"sed_e96\": {\n    \"nullable\": true\n  },\n  \"aute_50_\": {\n    \"nullable\": true\n  },\n  \"enim2\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Price Group Get Price Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/PriceGroup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PriceGroup"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"sed_e96\": {\n    \"nullable\": true\n  },\n  \"aute_50_\": {\n    \"nullable\": true\n  },\n  \"enim2\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"sed_e96\": {\n    \"nullable\": true\n  },\n  \"aute_50_\": {\n    \"nullable\": true\n  },\n  \"enim2\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Price Group Delete Price Group",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var body = [\r",
											"    pm.globals.get(\"__PriceGroupId\"),\r",
											"]\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/PriceGroup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PriceGroup"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"sed_e96\": {\n    \"nullable\": true\n  },\n  \"aute_50_\": {\n    \"nullable\": true\n  },\n  \"enim2\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/PriceGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PriceGroup"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"sed_e96\": {\n    \"nullable\": true\n  },\n  \"aute_50_\": {\n    \"nullable\": true\n  },\n  \"enim2\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Unit",
					"item": [
						{
							"name": "Unit Create Unit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.set(\"__UnitId\", pm.response.json());\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Vehicle\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Unit"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Unit Update Unit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__UnitId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{id}}\",\n  \"name\": \"One\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Unit/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Unit",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Unit Create Unit Measurement",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__UnitId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.set(\"__UnitMeasurementId\", pm.response.json());\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{id}}\",\n  \"name\": \"One\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Unit/{{id}}/measurement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Unit",
										"{{id}}",
										"measurement"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"unitId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurement"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"unitId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurement"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"unitId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurement"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Unit Update Unit Measurement",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__UnitId\"));\r",
											"pm.environment.set('measurementid', pm.globals.get(\"__UnitMeasurementId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{measurementid}}\",\n  \"unitId\": \"{{id}}\",\n  \"name\": \"Two\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Unit/{{id}}/measurement/{{measurementid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Unit",
										"{{id}}",
										"measurement",
										"{{measurementid}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"unitId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:unitid/measurement/:measurementid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":unitid",
												"measurement",
												":measurementid"
											],
											"variable": [
												{
													"key": "unitid"
												},
												{
													"key": "measurementid"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"unitId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:unitid/measurement/:measurementid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":unitid",
												"measurement",
												":measurementid"
											],
											"variable": [
												{
													"key": "unitid"
												},
												{
													"key": "measurementid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"unitId\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:unitid/measurement/:measurementid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":unitid",
												"measurement",
												":measurementid"
											],
											"variable": [
												{
													"key": "unitid"
												},
												{
													"key": "measurementid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Unit Get Units",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Unit"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Unit Get Unit Measurements",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__UnitId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Unit/{{id}}/measurements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Unit",
										"{{id}}",
										"measurements"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurements"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurements"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurements"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Unit Delete Unit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var body = [\r",
											"    pm.globals.get(\"__UnitId\"),\r",
											"]\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Unit"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Unit Delete Unit Measurement",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__UnitId\"));\r",
											"var body = [\r",
											"    pm.globals.get(\"__UnitMeasurementId\"),\r",
											"]\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Unit/{{id}}/measurements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Unit",
										"{{id}}",
										"measurements"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurements"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurements"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Unit/:id/measurements",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Unit",
												":id",
												"measurements"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Class",
					"item": [
						{
							"name": "Class Create Class",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.set(\"__ClassId\", pm.response.json());\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"State\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Class",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Class"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Class Update Class",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__ClassId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{id}}\",\n  \"key\": \"Condition\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Class/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Class",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Class Create Class Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.set(\"__ClassValueId\", pm.response.json());\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__ClassId\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"classId\": \"{{id}}\",\n  \"value\": \"New\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Class/{{id}}/value",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Class",
										"{{id}}",
										"value"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"classId\": \"<string>\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/value",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"value"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"classId\": \"<string>\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/value",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"value"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"classId\": \"<string>\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/value",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"value"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Class Update Class Value",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__ClassId\"));\r",
											"pm.environment.set('valueid', pm.globals.get(\"__ClassValueId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{valueid}}\",\n  \"classId\": \"{{id}}\",\n  \"value\": \"Used like new\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Class/{{id}}/value/{{valueid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Class",
										"{{id}}",
										"value",
										"{{valueid}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"classId\": \"<string>\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:classid/value/:valueid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":classid",
												"value",
												":valueid"
											],
											"variable": [
												{
													"key": "classid"
												},
												{
													"key": "valueid"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"classId\": \"<string>\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:classid/value/:valueid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":classid",
												"value",
												":valueid"
											],
											"variable": [
												{
													"key": "classid"
												},
												{
													"key": "valueid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"classId\": \"<string>\",\n  \"value\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:classid/value/:valueid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":classid",
												"value",
												":valueid"
											],
											"variable": [
												{
													"key": "classid"
												},
												{
													"key": "valueid"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Class Get Classes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Class",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Class"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Class Get Class Values",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__ClassId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Class/{{id}}/values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Class",
										"{{id}}",
										"values"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"values"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"values"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"values"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Class Delete Class Value",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__ClassId\"));\r",
											"var body = [\r",
											"    pm.globals.get(\"__ClassValueId\"),\r",
											"]\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Class/{{id}}/values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Class",
										"{{id}}",
										"values"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"values"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"values"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class/:id/values",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class",
												":id",
												"values"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Class Delete Class",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var body = [\r",
											"    pm.globals.get(\"__ClassId\"),\r",
											"]\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Class",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Class"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Class",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Class"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Family",
					"item": [
						{
							"name": "Family Create Family",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.set(\"__FamilyId\", pm.response.json());\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"parentFamilyId\": null,\n  \"designation\": \"Car\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Family",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Family"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Family Create SubFamily",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('ParentFamilyId', pm.globals.get(\"__FamilyId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.set(\"__SubFamilyId\", pm.response.json());\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"parentFamilyId\": \"{{ParentFamilyId}}\",\n  \"designation\": \"Toyota\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Family",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Family"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Family Update Family",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('id', pm.globals.get(\"__FamilyId\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{id}}\",\n  \"parentFamilyId\": null,\n  \"designation\": \"Vehicle\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Family/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Family",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"parentFamilyId\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Family Get Families",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Family",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Family"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Family Delete Family",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var body = [\r",
											"    pm.globals.get(\"__FamilyId\"),\r",
											"]\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Family",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Family"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Family",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Family"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"esse2f4\": {\n    \"nullable\": true\n  },\n  \"sit_0_0\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Product",
					"item": [
						{
							"name": "Product Create Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);\r",
											"    pm.globals.set(\"__ProductId\", pm.response.json());\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"longDesignation\": \"Toyota Camry\",\n  \"shortDesignation\": \"Toyota\",\n  \"description\": \"Toyota Camry 2020\",\n  \"type\": 0,\n  \"action\": 0,\n  \"barcode\": \"\",\n  \"classificationInfo\": {\n    \"familyId\": \"{{__SubFamilyId}}\",\n    \"family\": null\n  },\n  \"purchaseInfo\": {\n    \"price\": \"210000\"\n  },\n  \"sellInfo\": {\n    \"sellingPriceExcludingVAT\": \"200000\",\n    \"margin\": \"10000\",\n    \"discount\": \"2000\",\n    \"vatPercentage\": \"10\",\n    \"currency\": null\n  },\n  \"unitInfo\": {\n    \"isBalance\": false,\n    \"isDecimal\": false\n  },\n  \"storageSupplyInfo\": {\n    \"quantity\": \"3\",\n    \"maximumStock\": \"5\",\n    \"minimumStock\": \"1\",\n    \"safetyStock\": \"0\",\n    \"batchSize\": \"1\",\n    \"retentionPeriod\": \"365\"\n  },\n  \"productImages\": [\n    {\n      \"name\": \"Capture.png\",\n      \"contentType\": \"image/png\",\n      \"base64Data\": \"\"\n    },\n    {\n      \"name\": \"Capture d'écran 2023-04-25 164849.png\",\n      \"contentType\": \"image/png\",\n      \"base64Data\": \"\"\n    }\n  ],\n  \"productNotes\": [\n    \"TODO: Recheck Price\",\n    \"Review: Good car\"\n  ],\n  \"productClassifications\": [\n        {\n        \"productClassValueId\": \"{{__ClassValueId}}\"\n        }\n    ],\n  \"productUnits\": [\n        {\n        \"productUnitMeasurementId\": \"{{__UnitMeasurementId}}\"\n        }\n    ],\n  \"sellingPrices\": [\n    {\n      \"priceGroupId\": \"{{__PriceGroupId}}\",\n      \"price\": 2356,\n      \"margin\": 1254,\n      \"vat\": 10,\n      \"discount\": 2\n    }\n    ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"longDesignation\": \"<string>\",\n  \"shortDesignation\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": 2,\n  \"action\": 0,\n  \"barcode\": \"<string>\",\n  \"classificationInfo\": {\n    \"subfamilyId\": \"<string>\",\n    \"subFamily\": {}\n  },\n  \"purchaseInfo\": {\n    \"price\": \"<number>\"\n  },\n  \"sellInfo\": {\n    \"sellingPriceExcludingVAT\": \"<number>\",\n    \"margin\": \"<number>\",\n    \"discount\": \"<number>\",\n    \"vatPercentage\": \"<number>\",\n    \"currency\": \"<number>\"\n  },\n  \"unitInfo\": {\n    \"isBalance\": \"<boolean>\",\n    \"isDecimal\": \"<boolean>\"\n  },\n  \"storageSupplyInfo\": {\n    \"quantity\": \"<integer>\",\n    \"maximumStock\": \"<integer>\",\n    \"minimumStock\": \"<integer>\",\n    \"safetyStock\": \"<integer>\",\n    \"batchSize\": \"<integer>\",\n    \"retentionPeriod\": \"<integer>\"\n  },\n  \"productImages\": [\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    }\n  ],\n  \"productNotes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"productClassifications\": [\n    {\n      \"productClassKeyId\": \"<string>\",\n      \"productClassValueId\": \"<string>\"\n    },\n    {\n      \"productClassKeyId\": \"<string>\",\n      \"productClassValueId\": \"<string>\"\n    }\n  ],\n  \"productUnits\": [\n    {\n      \"productUnitTypeId\": \"<string>\",\n      \"productUnitMeasurementId\": \"<string>\"\n    },\n    {\n      \"productUnitTypeId\": \"<string>\",\n      \"productUnitMeasurementId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"longDesignation\": \"<string>\",\n  \"shortDesignation\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": 2,\n  \"action\": 0,\n  \"barcode\": \"<string>\",\n  \"classificationInfo\": {\n    \"subfamilyId\": \"<string>\",\n    \"subFamily\": {}\n  },\n  \"purchaseInfo\": {\n    \"price\": \"<number>\"\n  },\n  \"sellInfo\": {\n    \"sellingPriceExcludingVAT\": \"<number>\",\n    \"margin\": \"<number>\",\n    \"discount\": \"<number>\",\n    \"vatPercentage\": \"<number>\",\n    \"currency\": \"<number>\"\n  },\n  \"unitInfo\": {\n    \"isBalance\": \"<boolean>\",\n    \"isDecimal\": \"<boolean>\"\n  },\n  \"storageSupplyInfo\": {\n    \"quantity\": \"<integer>\",\n    \"maximumStock\": \"<integer>\",\n    \"minimumStock\": \"<integer>\",\n    \"safetyStock\": \"<integer>\",\n    \"batchSize\": \"<integer>\",\n    \"retentionPeriod\": \"<integer>\"\n  },\n  \"productImages\": [\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    }\n  ],\n  \"productNotes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"productClassifications\": [\n    {\n      \"productClassKeyId\": \"<string>\",\n      \"productClassValueId\": \"<string>\"\n    },\n    {\n      \"productClassKeyId\": \"<string>\",\n      \"productClassValueId\": \"<string>\"\n    }\n  ],\n  \"productUnits\": [\n    {\n      \"productUnitTypeId\": \"<string>\",\n      \"productUnitMeasurementId\": \"<string>\"\n    },\n    {\n      \"productUnitTypeId\": \"<string>\",\n      \"productUnitMeasurementId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"longDesignation\": \"<string>\",\n  \"shortDesignation\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": 2,\n  \"action\": 0,\n  \"barcode\": \"<string>\",\n  \"classificationInfo\": {\n    \"subfamilyId\": \"<string>\",\n    \"subFamily\": {}\n  },\n  \"purchaseInfo\": {\n    \"price\": \"<number>\"\n  },\n  \"sellInfo\": {\n    \"sellingPriceExcludingVAT\": \"<number>\",\n    \"margin\": \"<number>\",\n    \"discount\": \"<number>\",\n    \"vatPercentage\": \"<number>\",\n    \"currency\": \"<number>\"\n  },\n  \"unitInfo\": {\n    \"isBalance\": \"<boolean>\",\n    \"isDecimal\": \"<boolean>\"\n  },\n  \"storageSupplyInfo\": {\n    \"quantity\": \"<integer>\",\n    \"maximumStock\": \"<integer>\",\n    \"minimumStock\": \"<integer>\",\n    \"safetyStock\": \"<integer>\",\n    \"batchSize\": \"<integer>\",\n    \"retentionPeriod\": \"<integer>\"\n  },\n  \"productImages\": [\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    }\n  ],\n  \"productNotes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"productClassifications\": [\n    {\n      \"productClassKeyId\": \"<string>\",\n      \"productClassValueId\": \"<string>\"\n    },\n    {\n      \"productClassKeyId\": \"<string>\",\n      \"productClassValueId\": \"<string>\"\n    }\n  ],\n  \"productUnits\": [\n    {\n      \"productUnitTypeId\": \"<string>\",\n      \"productUnitMeasurementId\": \"<string>\"\n    },\n    {\n      \"productUnitTypeId\": \"<string>\",\n      \"productUnitMeasurementId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Product Get Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.variables.set(\"id\",pm.globals.get(\"__ProductId\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);\r",
											"    let responseData=pm.response.json();\r",
											"    pm.environment.set(\"__ProductIdShortDesignation\", responseData.shortDesignation);\r",
											"    pm.environment.set(\"__SellingPriceId\", responseData.sellingPrices[0].id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Product/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Product Search Products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.variables.set(\"term\",pm.globals.get(\"__ProductIdShortDesignation\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Product/{{term}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										"{{term}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/:term",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":term"
											],
											"variable": [
												{
													"key": "term"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/:term",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":term"
											],
											"variable": [
												{
													"key": "term"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/:term",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":term"
											],
											"variable": [
												{
													"key": "term"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Product Activate Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var body = [\r",
											"    pm.globals.get(\"__ProductId\"),\r",
											"]\r",
											"\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Product/UpdateProductStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										"UpdateProductStatus"
									],
									"variable": [
										{
											"key": "status",
											"value": "true",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/UpdateProductStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"UpdateProductStatus"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/UpdateProductStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"UpdateProductStatus"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"officia_0e\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/UpdateProductStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"UpdateProductStatus"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"officia_0e\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Product Update Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"id\",pm.globals.get(\"__ProductId\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{id}}\",\n  \"longDesignation\": \"Toyota Camry another model\",\n  \"shortDesignation\": \"Toyota another model\",\n  \"description\": \"Toyota Camry 2018\",\n  \"type\": 0,\n  \"action\": 0,\n  \"barcode\": \"\",\n  \"classificationInfo\": {\n    \"familyId\": \"{{__SubFamilyId}}\",\n    \"family\": null\n  },\n  \"purchaseInfo\": {\n    \"price\": \"200000\"\n  },\n  \"sellInfo\": {\n    \"sellingPriceExcludingVAT\": \"190000\",\n    \"margin\": \"10000\",\n    \"discount\": \"2000\",\n    \"vatPercentage\": \"10\",\n    \"currency\": null\n  },\n  \"unitInfo\": {\n    \"isBalance\": false,\n    \"isDecimal\": false\n  },\n  \"storageSupplyInfo\": {\n    \"quantity\": \"3\",\n    \"maximumStock\": \"5\",\n    \"minimumStock\": \"1\",\n    \"safetyStock\": \"0\",\n    \"batchSize\": \"1\",\n    \"retentionPeriod\": \"365\"\n  },\n  \"productImages\": [\n    {\n      \"name\": \"Capture 2.png\",\n      \"contentType\": \"image/png\",\n      \"base64Data\": \"\"\n    },\n    {\n      \"name\": \"Capture 3.png\",\n      \"contentType\": \"image/png\",\n      \"base64Data\": \"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g+goLq8zVxts1HZUl3c/Vk8MYYjhLNH5LitFYlhLVJWUn+rXisqR6OzHtREI/WP/j+dKkwgdhn3lP/LSkXGPWAoyvrfxPY4t5sWItjgXlSi1E4SGMkyIYKmc4yOGvMTPRryfn4wakV+r/HmrFffpf8CRjcMd6kXw1blbj/ye4z3Ee1nZ9wVA69WhoaHBx4mwDP327p++9r/vLOHFu93/6xvTDh1fTp//3LH5OCoU5s+fnx5++OE878IzzzyTOnTokHbYYYfUt2/ftO2226aNNtooX9vSvfLKK+mEr/17OuTUi4oWWqonZz6Q/vTz0emKH3y/aFk3+g/4cPrKj+4pjlZOdOajk1WKDmLZyYxz8env8G+Pzp8kj/n68Dw+Pjr67+/UNW25Tc90xKnn5c5fzIdQhg0RWER7dGRj6EMMgyhF5UJ08kLtudrnRNCwrPutSMOCp9IvvntKuumG64qW9iHC008d9dl0zLlXFy2srrFfG5puHH9N6tix2tAMANYewQIsh2BhxeqDhVpv/35Jjz32WPrzn/+cnnrqqTy54wc+8IH0oQ99KPXu3TttsskmxZUtk2Ch9VhXwUIEaTHkZ+7cuWmvvfaqFCy0NYIFwUJzESwAtB6GQgBrzOabb547W4cddlg66KCD0i677JJeeOGFPDzihz/8YR4u8fzzz5uHgVbp73//e/r973+fvv/976d77723aAUAaH8EC8Aa9973vjftvPPOOVw49NBDU//+/XOYMHHixDRmzJh06623moeBVqOsUrj22mvTuHHj8s/33nvvXZwFAGh/BAvAWrPBBhukXr16pf/3//5fOvzww9PHP/7x9P73vz/98Y9/TFdddVX66U9/mh599NE8ZAJaoqhSmDp1arrsssvS9OnT00c/+tF07LHHChYAgHZNsACsdTGZY7du3dK+++6bhg0blg444IA8qeOsWbPS1Vdfnbf7778//e1vfyueAetWbZXC//3f/6WNN944h2Of+tSn8s8y7VeETYZzAdDeCRaAdapTp06pX79+eanKQw45JM/D8Nxzz6Ubb7wx/ehHP0r33HNPnpcB1pUYolNbpTBw4MBcpRBDejbccMPiKtqjt956K82cOTPNmTMnB6ECBgDaK8EC0CLEChERKhx88ME5ZIiwIT4JvOOOO9KVV16ZJkyYkJ5++un8hzysLTG5aAzRUaWw8t588+85jIkKj4ULFzZuERiWW/x3jS1Wjim3CBDL7cUXX8zbSy+9lLfyuL795ZdfbtxiFZdyi05+bIsWLWrcXn311bzFUKvYavdje/311/P2xhtvNG7xO6jc4muKLX4HlVt8DePHj0/f+ta30s0335z+/sbbz3/dUC4A2h/LTcJyWG5yxZa33OTqiD/aI0iITwP/8pe/pGeeeSbP0RDLVO65556pe/fua/zTYstNth7NvdxkdCAfeOCBHGhFRzd+5gYNGrTCQMFykynN/cu0dNN3Tk17fKhPWm+9JZ9fvOc978n7MQyq3I/HUO7Xn4/9eGxqK8+V1zbVXnuv+nPlcXld7bVlW/m82mvr2+IxwohY4eamm25Kzz3/Qvrkl85NPXfplzZ+36b5Gqqz3CRA6yFYgOUQLKzYmgoWasUnn4899lh66KGH0rx58/IniT179sxLWe6www55Vv41QbDQejRnsBCfQv/yl79Mf/jDH9JWW22VA4U99thjpYIswUJKT836U/r5d09N//LZY/PQgPLT/dr92KLTXXscao/LYQW1x7GVVQPlcWy1x7XXN3Vd7fnatlB7XH8+9kPtcTxGsBDVE1Eh8ebbx1tu88E06MiT0g57fDRtsNHG+TlUI1gAaD0EC7AcgoUVWxvBQilKoGfPnp3+9Kc/pblz5+by56233jr16dMn7brrrmmzzTYrrmwegoXWozmChegkxs/WLbfcskpVCrUECyk1LHgq/eK7p6SbbriuaGm7YojE448/nn7+85+n3/3ud2negoXp02eNTp23+WB6z/rrF1dRlWABoPUwxwLQasTSlLvvvnse437YYYfleRji08L4dHns2LHpV7/6VZo/f37uIMKqiCDhhhtuSNdcc00ecnPooYeaS4EVimqq0aNH52Fbp59+etpiy61T1x47ChUAaHcEC0CrE5PoxRCIf/7nf86T6cWylfGJ1uTJk9NVV12VxzrHLO0xZAKWJ0KoBx98MP3gBz9I06ZNy0Mejj76aCs+sFKiYmrkyJF58sa+ffum9d6zZN4IAGhvBAtAqxWTqcUkjh//+MdzwPCJT3wij4mPyR7/93//N1177bW5tD1mhId6tVUK66+/fjrooINUKbDKtthiixx2AkB7JlgA2oQtt9wyf8ocQyQOPPDAXNEQEz1GuPCjH/0oVzPEHA0QVQoRPtVWKXz6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\"\n    }\n  ],\n  \"productNotes\": [\n    \"Price chaanged\"\n  ],\n  \"productClassifications\": [\n        {\n        \"productClassValueId\": \"{{__ClassValueId}}\"\n        }\n    ],\n  \"productUnits\": [\n        {\n        \"productUnitMeasurementId\": \"{{__UnitMeasurementId}}\"\n        }\n    ],\n  \"sellingPrices\": [\n      {\n      \"priceGroupId\": \"{{__PriceGroupId}}\",\n      \"price\": 3356,\n      \"margin\": 2254.54,\n      \"vat\": 20,\n      \"discount\": 5\n    }\n    ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Product/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"longDesignation\": \"<string>\",\n  \"shortDesignation\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": 1,\n  \"action\": 0,\n  \"barcode\": \"<string>\",\n  \"classificationInfo\": {\n    \"subfamilyId\": \"<string>\",\n    \"subFamily\": {}\n  },\n  \"purchaseInfo\": {\n    \"price\": \"<number>\"\n  },\n  \"sellInfo\": {\n    \"sellingPriceExcludingVAT\": \"<number>\",\n    \"margin\": \"<number>\",\n    \"discount\": \"<number>\",\n    \"vatPercentage\": \"<number>\",\n    \"currency\": \"<number>\"\n  },\n  \"unitInfo\": {\n    \"isBalance\": \"<boolean>\",\n    \"isDecimal\": \"<boolean>\"\n  },\n  \"storageSupplyInfo\": {\n    \"quantity\": \"<integer>\",\n    \"maximumStock\": \"<integer>\",\n    \"minimumStock\": \"<integer>\",\n    \"safetyStock\": \"<integer>\",\n    \"batchSize\": \"<integer>\",\n    \"retentionPeriod\": \"<integer>\"\n  },\n  \"productImages\": [\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    }\n  ],\n  \"productNotes\": [\n    {\n      \"id\": \"<string>\",\n      \"note\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"note\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"longDesignation\": \"<string>\",\n  \"shortDesignation\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": 1,\n  \"action\": 0,\n  \"barcode\": \"<string>\",\n  \"classificationInfo\": {\n    \"subfamilyId\": \"<string>\",\n    \"subFamily\": {}\n  },\n  \"purchaseInfo\": {\n    \"price\": \"<number>\"\n  },\n  \"sellInfo\": {\n    \"sellingPriceExcludingVAT\": \"<number>\",\n    \"margin\": \"<number>\",\n    \"discount\": \"<number>\",\n    \"vatPercentage\": \"<number>\",\n    \"currency\": \"<number>\"\n  },\n  \"unitInfo\": {\n    \"isBalance\": \"<boolean>\",\n    \"isDecimal\": \"<boolean>\"\n  },\n  \"storageSupplyInfo\": {\n    \"quantity\": \"<integer>\",\n    \"maximumStock\": \"<integer>\",\n    \"minimumStock\": \"<integer>\",\n    \"safetyStock\": \"<integer>\",\n    \"batchSize\": \"<integer>\",\n    \"retentionPeriod\": \"<integer>\"\n  },\n  \"productImages\": [\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    }\n  ],\n  \"productNotes\": [\n    {\n      \"id\": \"<string>\",\n      \"note\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"note\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"longDesignation\": \"<string>\",\n  \"shortDesignation\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": 1,\n  \"action\": 0,\n  \"barcode\": \"<string>\",\n  \"classificationInfo\": {\n    \"subfamilyId\": \"<string>\",\n    \"subFamily\": {}\n  },\n  \"purchaseInfo\": {\n    \"price\": \"<number>\"\n  },\n  \"sellInfo\": {\n    \"sellingPriceExcludingVAT\": \"<number>\",\n    \"margin\": \"<number>\",\n    \"discount\": \"<number>\",\n    \"vatPercentage\": \"<number>\",\n    \"currency\": \"<number>\"\n  },\n  \"unitInfo\": {\n    \"isBalance\": \"<boolean>\",\n    \"isDecimal\": \"<boolean>\"\n  },\n  \"storageSupplyInfo\": {\n    \"quantity\": \"<integer>\",\n    \"maximumStock\": \"<integer>\",\n    \"minimumStock\": \"<integer>\",\n    \"safetyStock\": \"<integer>\",\n    \"batchSize\": \"<integer>\",\n    \"retentionPeriod\": \"<integer>\"\n  },\n  \"productImages\": [\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"contentType\": \"<string>\",\n      \"base64Data\": \"<string>\"\n    }\n  ],\n  \"productNotes\": [\n    {\n      \"id\": \"<string>\",\n      \"note\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"note\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Product Get Product Images",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"id\",pm.globals.get(\"__ProductId\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Product/{{id}}/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										"{{id}}",
										"images"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/GetProductImages{{id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"GetProductImages{{id}}"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/GetProductImages{{id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"GetProductImages{{id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/GetProductImages{{id}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"GetProductImages{{id}}"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Product Get Products",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						},
						{
							"name": "Product Delete Product",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var body = [\r",
											"    pm.globals.get(\"__ProductId\"),\r",
											"]\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\",\n  \"voluptate_c_\": {\n    \"nullable\": true\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Customer",
					"item": [
						{
							"name": "Customer Create Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);\r",
											"    pm.globals.set(\"__CustomerId\", pm.response.json());\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"typeClient\": \"0\",\n  \"category\": \"category\",\n  \"lastName\": \"creator\",\n  \"firstName\": \"taylor\",\n  \"socialReason\": \"social Reason\",\n  \"ice\": \"ice\",\n  \"tel\": \"06549871\",\n  \"fax\": \"05432178\",\n  \"mobile\": \"078945612\",\n  \"email\": \"taylor@bbb.com\",\n  \"webSite\": \"\",\n  \"deleted\": 0,\n  \"active\": 1,\n  \"customerAddresses\": [\n    {\n      \"id\": null,\n      \"typeAddress\": \"0\",\n      \"streetAdress\": \"molay sliman\",\n      \"zipCode\": \"30000\",\n      \"city\": \"Fes\",\n      \"state\": \"Fes\",\n      \"region\": \"Fes\",\n      \"localisation\": \"Fes\",\n      \"complement\": \"Fes\",\n      \"deleted\": \"0\",\n      \"active\": \"1\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"typeClient\": \"<integer>\",\n  \"category\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"socialReason\": \"<string>\",\n  \"ice\": \"<string>\",\n  \"tel\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"mobile\": \"<string>\",\n  \"email\": \"<string>\",\n  \"webSite\": \"<string>\",\n  \"deleted\": \"<integer>\",\n  \"active\": \"<integer>\",\n  \"customerAddresses\": [\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"typeClient\": \"<integer>\",\n  \"category\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"socialReason\": \"<string>\",\n  \"ice\": \"<string>\",\n  \"tel\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"mobile\": \"<string>\",\n  \"email\": \"<string>\",\n  \"webSite\": \"<string>\",\n  \"deleted\": \"<integer>\",\n  \"active\": \"<integer>\",\n  \"customerAddresses\": [\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"typeClient\": \"<integer>\",\n  \"category\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"socialReason\": \"<string>\",\n  \"ice\": \"<string>\",\n  \"tel\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"mobile\": \"<string>\",\n  \"email\": \"<string>\",\n  \"webSite\": \"<string>\",\n  \"deleted\": \"<integer>\",\n  \"active\": \"<integer>\",\n  \"customerAddresses\": [\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Customer Get Customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"id\",pm.globals.get(\"__CustomerId\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);\r",
											"    let responseData=pm.response.json();\r",
											"    pm.environment.set(\"__CustomerLastName\", responseData.lastName);\r",
											"    pm.environment.set(\"__CustomerSocialReason\", responseData.socialReason);\r",
											"    pm.environment.set(\"__CustomerCategory\", responseData.category);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Customer Search By Social Reason",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"term\",pm.environment.get(\"__CustomerSocialReason\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/SearchBySocialReason?socialreason={{term}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"SearchBySocialReason"
									],
									"query": [
										{
											"key": "socialreason",
											"value": "{{term}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchBySocialReason?socialreason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchBySocialReason"
											],
											"query": [
												{
													"key": "socialreason",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchBySocialReason?socialreason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchBySocialReason"
											],
											"query": [
												{
													"key": "socialreason",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchBySocialReason?socialreason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchBySocialReason"
											],
											"query": [
												{
													"key": "socialreason",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Customer Search By Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"term\",pm.environment.get(\"__CustomerLastName\"))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/SearchByName?name={{term}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"SearchByName"
									],
									"query": [
										{
											"key": "name",
											"value": "{{term}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchByName?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchByName"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchByName?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchByName"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchByName?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchByName"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Customer Search By Category",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"term\",pm.environment.get(\"__CustomerCategory\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/SearchByCategory?categorie={{term}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"SearchByCategory"
									],
									"query": [
										{
											"key": "categorie",
											"value": "{{term}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchByCategory?categorie=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchByCategory"
											],
											"query": [
												{
													"key": "categorie",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchByCategory?categorie=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchByCategory"
											],
											"query": [
												{
													"key": "categorie",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/SearchByCategory?categorie=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												"SearchByCategory"
											],
											"query": [
												{
													"key": "categorie",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Customer Update Customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"id\",pm.globals.get(\"__CustomerId\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{id}}\",\n  \"typeClient\": \"0\",\n  \"category\": \"category 2\",\n  \"lastName\": \"creator 2\",\n  \"firstName\": \"taylor\",\n  \"socialReason\": \"social Reason 2\",\n  \"ice\": \"ice\",\n  \"tel\": \"06549871\",\n  \"fax\": \"05432178\",\n  \"mobile\": \"078945612\",\n  \"email\": \"taylor@bbb.com\",\n  \"webSite\": \"\",\n  \"deleted\": 0,\n  \"active\": 1,\n  \"customerAddresses\": [\n    {\n      \"id\": null,\n      \"typeAddress\": \"0\",\n      \"streetAdress\": \"molay sliman 2\",\n      \"zipCode\": \"30000\",\n      \"city\": \"Fes\",\n      \"state\": \"Fes\",\n      \"region\": \"Fes\",\n      \"localisation\": \"Fes\",\n      \"complement\": \"Fes\",\n      \"deleted\": \"0\",\n      \"active\": \"1\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Customer/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"typeClient\": \"<integer>\",\n  \"category\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"socialReason\": \"<string>\",\n  \"ice\": \"<string>\",\n  \"tel\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"mobile\": \"<string>\",\n  \"email\": \"<string>\",\n  \"webSite\": \"<string>\",\n  \"deleted\": \"<integer>\",\n  \"active\": \"<integer>\",\n  \"customerAddresses\": [\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"typeClient\": \"<integer>\",\n  \"category\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"socialReason\": \"<string>\",\n  \"ice\": \"<string>\",\n  \"tel\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"mobile\": \"<string>\",\n  \"email\": \"<string>\",\n  \"webSite\": \"<string>\",\n  \"deleted\": \"<integer>\",\n  \"active\": \"<integer>\",\n  \"customerAddresses\": [\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"typeClient\": \"<integer>\",\n  \"category\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"socialReason\": \"<string>\",\n  \"ice\": \"<string>\",\n  \"tel\": \"<string>\",\n  \"fax\": \"<string>\",\n  \"mobile\": \"<string>\",\n  \"email\": \"<string>\",\n  \"webSite\": \"<string>\",\n  \"deleted\": \"<integer>\",\n  \"active\": \"<integer>\",\n  \"customerAddresses\": [\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"typeAddress\": \"<integer>\",\n      \"streetAdress\": \"<string>\",\n      \"zipCode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"state\": \"<string>\",\n      \"region\": \"<string>\",\n      \"localisation\": \"<string>\",\n      \"complement\": \"<string>\",\n      \"deleted\": \"<integer>\",\n      \"active\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Customer Get Customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Customer Delete Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"id\",pm.globals.get(\"__CustomerId\"))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Customer/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Customer",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Customer/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Customer",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SaleOrder",
					"item": [
						{
							"name": "Sale Order Create Sale Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.globals.set(\"__SaleOrderId\", pm.response.json());\r",
											"    console.log(pm.globals.get(\"__SaleOrderId\"))\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerId\": \"{{__CustomerId}}\",\n  \"discount\": \"2\",\n  \"saleOrderLines\": [\n    {\n      \"id\": null,\n      \"sellingPriceId\": \"{{__SellingPriceId}}\",\n      \"qty\": \"2\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SaleOrder",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SaleOrder"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<string>\",\n  \"discount\": \"<float>\",\n  \"saleOrderLines\": [\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<string>\",\n  \"discount\": \"<float>\",\n  \"saleOrderLines\": [\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"<string>\",\n  \"discount\": \"<float>\",\n  \"saleOrderLines\": [\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Sale Order Update Sale Order",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"id\",pm.globals.get(\"__SaleOrderId\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{id}}\",\n  \"customerId\": \"{{__CustomerId}}\",\n  \"discount\": \"2\",\n  \"saleOrderLines\": [\n    {\n      \"id\": null,\n      \"sellingPriceId\": \"{{__SellingPriceId}}\",\n      \"qty\": \"2\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SaleOrder/{{id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SaleOrder",
										"{{id}}"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"discount\": \"<float>\",\n  \"saleOrderLines\": [\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"discount\": \"<float>\",\n  \"saleOrderLines\": [\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"discount\": \"<float>\",\n  \"saleOrderLines\": [\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"sellingPriceId\": \"<string>\",\n      \"qty\": \"<integer>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Sale Order Get Sale Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SaleOrder",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SaleOrder"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Sale Order Get Sale Order Lines",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"id\",pm.globals.get(\"__SaleOrderId\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SaleOrder/{{id}}/lines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SaleOrder",
										"{{id}}",
										"lines"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder/:id/lines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder",
												":id",
												"lines"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder/:id/lines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder",
												":id",
												"lines"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder/:id/lines",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder",
												":id",
												"lines"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Sale Order Delete Sale Order",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var body = [\r",
											"    pm.globals.get(\"__SaleOrderId\"),\r",
											"]\r",
											"var body_str = JSON.stringify(body); // body was defined in the previous step.\r",
											"pm.environment.set('request_body', body_str); // this sets an environment variable with the stringified body"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{request_body}}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SaleOrder",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SaleOrder"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								},
								{
									"name": "Untitled Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SaleOrder",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SaleOrder"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:7228"
		},
		{
			"key": "id",
			"value": "<string>"
		},
		{
			"key": "term",
			"value": "<string>",
			"type": "string"
		},
		{
			"key": "valueid",
			"value": "valueid"
		},
		{
			"key": "measurementid",
			"value": " "
		}
	]
}